#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_memmap.h"
#include "inc/hw_types.h"
#include "driverlib/sysctl.h"
#include "driverlib/gpio.h"
#include "driverlib/pwm.h"
#include "driverlib/pin_map.h"

// System clock frequency
#define PWM_FREQUENCY 1000

int main(void)
{
    // Variables
    uint32_t ui32PWMClock;
    uint8_t ui8Adjust;
    
    // Set system clock to 50MHz
    SysCtlClockSet(SYSCTL_SYSDIV_4 | SYSCTL_USE_PLL | SYSCTL_OSC_MAIN | SYSCTL_XTAL_16MHZ);

    // Enable PWM1 and GPIOF
    SysCtlPeripheralEnable(SYSCTL_PERIPH_PWM1);
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);

    // Wait for GPIOF ready
    while(!SysCtlPeripheralReady(SYSCTL_PERIPH_GPIOF)) {}

    // Configure PF3 for PWM (PWM1 output 7)
    GPIOPinConfigure(GPIO_PF3_M1PWM7);
    GPIOPinTypePWM(GPIO_PORTF_BASE, GPIO_PIN_3);

    // Configure PWM clock
    SysCtlPWMClockSet(SYSCTL_PWMDIV_64); // PWM clock = 50MHz / 64 = 781.25 kHz
    ui32PWMClock = SysCtlClockGet() / 64;

    // Configure PWM generator
    PWMGenConfigure(PWM1_BASE, PWM_GEN_3, PWM_GEN_MODE_DOWN | PWM_GEN_MODE_NO_SYNC);
    PWMGenPeriodSet(PWM1_BASE, PWM_GEN_3, ui32PWMClock / PWM_FREQUENCY); // Set PWM freq = 1kHz

    // Start with 10% brightness
    ui8Adjust = 10;
    PWMPulseWidthSet(PWM1_BASE, PWM_OUT_7, ui8Adjust * PWMGenPeriodGet(PWM1_BASE, PWM_GEN_3) / 100);

    // Enable PWM output
    PWMOutputState(PWM1_BASE, PWM_OUT_7_BIT, true);
    PWMGenEnable(PWM1_BASE, PWM_GEN_3);

    // Fade loop
    while(1)
    {
        // Increase brightness
        for(ui8Adjust = 10; ui8Adjust < 90; ui8Adjust++)
        {
            PWMPulseWidthSet(PWM1_BASE, PWM_OUT_7,
                ui8Adjust * PWMGenPeriodGet(PWM1_BASE, PWM_GEN_3) / 100);
            SysCtlDelay(SysCtlClockGet() / 300);  // Delay
        }

        // Decrease brightness
        for(ui8Adjust = 90; ui8Adjust > 10; ui8Adjust--)
        {
            PWMPulseWidthSet(PWM1_BASE, PWM_OUT_7,
                ui8Adjust * PWMGenPeriodGet(PWM1_BASE, PWM_GEN_3) / 100);
            SysCtlDelay(SysCtlClockGet() / 300);  // Delay
        }
    }
}
